{"version":3,"file":"static/js/857.ffa2eced.chunk.js","mappings":"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","sources":["../node_modules/jspdf-autotable/dist/jspdf.plugin.autotable.mjs"],"sourcesContent":["/**\n * Improved text function with halign and valign support\n * Inspiration from: http://stackoverflow.com/questions/28327510/align-text-right-using-jspdf/28433113#28433113\n */\nfunction autoTableText (text, x, y, styles, doc) {\n    styles = styles || {};\n    var PHYSICAL_LINE_HEIGHT = 1.15;\n    var k = doc.internal.scaleFactor;\n    var fontSize = doc.internal.getFontSize() / k;\n    var lineHeightFactor = doc.getLineHeightFactor\n        ? doc.getLineHeightFactor()\n        : PHYSICAL_LINE_HEIGHT;\n    var lineHeight = fontSize * lineHeightFactor;\n    var splitRegex = /\\r\\n|\\r|\\n/g;\n    var splitText = '';\n    var lineCount = 1;\n    if (styles.valign === 'middle' ||\n        styles.valign === 'bottom' ||\n        styles.halign === 'center' ||\n        styles.halign === 'right') {\n        splitText = typeof text === 'string' ? text.split(splitRegex) : text;\n        lineCount = splitText.length || 1;\n    }\n    // Align the top\n    y += fontSize * (2 - PHYSICAL_LINE_HEIGHT);\n    if (styles.valign === 'middle')\n        y -= (lineCount / 2) * lineHeight;\n    else if (styles.valign === 'bottom')\n        y -= lineCount * lineHeight;\n    if (styles.halign === 'center' || styles.halign === 'right') {\n        var alignSize = fontSize;\n        if (styles.halign === 'center')\n            alignSize *= 0.5;\n        if (splitText && lineCount >= 1) {\n            for (var iLine = 0; iLine < splitText.length; iLine++) {\n                doc.text(splitText[iLine], x - doc.getStringUnitWidth(splitText[iLine]) * alignSize, y);\n                y += lineHeight;\n            }\n            return doc;\n        }\n        x -= doc.getStringUnitWidth(text) * alignSize;\n    }\n    if (styles.halign === 'justify') {\n        doc.text(text, x, y, { maxWidth: styles.maxWidth || 100, align: 'justify' });\n    }\n    else {\n        doc.text(text, x, y);\n    }\n    return doc;\n}\n\nvar globalDefaults = {};\nvar DocHandler = /** @class */ (function () {\n    function DocHandler(jsPDFDocument) {\n        this.jsPDFDocument = jsPDFDocument;\n        this.userStyles = {\n            // Black for versions of jspdf without getTextColor\n            textColor: jsPDFDocument.getTextColor\n                ? this.jsPDFDocument.getTextColor()\n                : 0,\n            fontSize: jsPDFDocument.internal.getFontSize(),\n            fontStyle: jsPDFDocument.internal.getFont().fontStyle,\n            font: jsPDFDocument.internal.getFont().fontName,\n            // 0 for versions of jspdf without getLineWidth\n            lineWidth: jsPDFDocument.getLineWidth\n                ? this.jsPDFDocument.getLineWidth()\n                : 0,\n            // Black for versions of jspdf without getDrawColor\n            lineColor: jsPDFDocument.getDrawColor\n                ? this.jsPDFDocument.getDrawColor()\n                : 0,\n        };\n    }\n    DocHandler.setDefaults = function (defaults, doc) {\n        if (doc === void 0) { doc = null; }\n        if (doc) {\n            doc.__autoTableDocumentDefaults = defaults;\n        }\n        else {\n            globalDefaults = defaults;\n        }\n    };\n    DocHandler.unifyColor = function (c) {\n        if (Array.isArray(c)) {\n            return c;\n        }\n        else if (typeof c === 'number') {\n            return [c, c, c];\n        }\n        else if (typeof c === 'string') {\n            return [c];\n        }\n        else {\n            return null;\n        }\n    };\n    DocHandler.prototype.applyStyles = function (styles, fontOnly) {\n        // Font style needs to be applied before font\n        // https://github.com/simonbengtsson/jsPDF-AutoTable/issues/632\n        var _a, _b, _c;\n        if (fontOnly === void 0) { fontOnly = false; }\n        if (styles.fontStyle && this.jsPDFDocument.setFontStyle) {\n            this.jsPDFDocument.setFontStyle(styles.fontStyle);\n        }\n        var _d = this.jsPDFDocument.internal.getFont(), fontStyle = _d.fontStyle, fontName = _d.fontName;\n        if (styles.font)\n            fontName = styles.font;\n        if (styles.fontStyle) {\n            fontStyle = styles.fontStyle;\n            var availableFontStyles = this.getFontList()[fontName];\n            if (availableFontStyles &&\n                availableFontStyles.indexOf(fontStyle) === -1 &&\n                this.jsPDFDocument.setFontStyle) {\n                // Common issue was that the default bold in headers\n                // made custom fonts not work. For example:\n                // https://github.com/simonbengtsson/jsPDF-AutoTable/issues/653\n                this.jsPDFDocument.setFontStyle(availableFontStyles[0]);\n                fontStyle = availableFontStyles[0];\n            }\n        }\n        this.jsPDFDocument.setFont(fontName, fontStyle);\n        if (styles.fontSize)\n            this.jsPDFDocument.setFontSize(styles.fontSize);\n        if (fontOnly) {\n            return; // Performance improvement\n        }\n        var color = DocHandler.unifyColor(styles.fillColor);\n        if (color)\n            (_a = this.jsPDFDocument).setFillColor.apply(_a, color);\n        color = DocHandler.unifyColor(styles.textColor);\n        if (color)\n            (_b = this.jsPDFDocument).setTextColor.apply(_b, color);\n        color = DocHandler.unifyColor(styles.lineColor);\n        if (color)\n            (_c = this.jsPDFDocument).setDrawColor.apply(_c, color);\n        if (typeof styles.lineWidth === 'number') {\n            this.jsPDFDocument.setLineWidth(styles.lineWidth);\n        }\n    };\n    DocHandler.prototype.splitTextToSize = function (text, size, opts) {\n        return this.jsPDFDocument.splitTextToSize(text, size, opts);\n    };\n    /**\n     * Adds a rectangle to the PDF\n     * @param x Coordinate (in units declared at inception of PDF document) against left edge of the page\n     * @param y Coordinate (in units declared at inception of PDF document) against upper edge of the page\n     * @param width Width (in units declared at inception of PDF document)\n     * @param height Height (in units declared at inception of PDF document)\n     * @param fillStyle A string specifying the painting style or null. Valid styles include: 'S' [default] - stroke, 'F' - fill, and 'DF' (or 'FD') - fill then stroke.\n     */\n    DocHandler.prototype.rect = function (x, y, width, height, fillStyle) {\n        // null is excluded from fillStyle possible values because it isn't needed\n        // and is prone to bugs as it's used to postpone setting the style\n        // https://rawgit.com/MrRio/jsPDF/master/docs/jsPDF.html#rect\n        return this.jsPDFDocument.rect(x, y, width, height, fillStyle);\n    };\n    DocHandler.prototype.getLastAutoTable = function () {\n        return this.jsPDFDocument.lastAutoTable || null;\n    };\n    DocHandler.prototype.getTextWidth = function (text) {\n        return this.jsPDFDocument.getTextWidth(text);\n    };\n    DocHandler.prototype.getDocument = function () {\n        return this.jsPDFDocument;\n    };\n    DocHandler.prototype.setPage = function (page) {\n        this.jsPDFDocument.setPage(page);\n    };\n    DocHandler.prototype.addPage = function () {\n        return this.jsPDFDocument.addPage();\n    };\n    DocHandler.prototype.getFontList = function () {\n        return this.jsPDFDocument.getFontList();\n    };\n    DocHandler.prototype.getGlobalOptions = function () {\n        return globalDefaults || {};\n    };\n    DocHandler.prototype.getDocumentOptions = function () {\n        return this.jsPDFDocument.__autoTableDocumentDefaults || {};\n    };\n    DocHandler.prototype.pageSize = function () {\n        var pageSize = this.jsPDFDocument.internal.pageSize;\n        // JSPDF 1.4 uses get functions instead of properties on pageSize\n        if (pageSize.width == null) {\n            pageSize = { width: pageSize.getWidth(), height: pageSize.getHeight() };\n        }\n        return pageSize;\n    };\n    DocHandler.prototype.scaleFactor = function () {\n        return this.jsPDFDocument.internal.scaleFactor;\n    };\n    DocHandler.prototype.getLineHeightFactor = function () {\n        var doc = this.jsPDFDocument;\n        return doc.getLineHeightFactor ? doc.getLineHeightFactor() : 1.15;\n    };\n    DocHandler.prototype.getLineHeight = function (fontSize) {\n        return (fontSize / this.scaleFactor()) * this.getLineHeightFactor();\n    };\n    DocHandler.prototype.pageNumber = function () {\n        var pageInfo = this.jsPDFDocument.internal.getCurrentPageInfo();\n        if (!pageInfo) {\n            // Only recent versions of jspdf has pageInfo\n            return this.jsPDFDocument.internal.getNumberOfPages();\n        }\n        return pageInfo.pageNumber;\n    };\n    return DocHandler;\n}());\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\nvar HtmlRowInput = /** @class */ (function (_super) {\n    __extends(HtmlRowInput, _super);\n    function HtmlRowInput(element) {\n        var _this = _super.call(this) || this;\n        _this._element = element;\n        return _this;\n    }\n    return HtmlRowInput;\n}(Array));\n// Base style for all themes\nfunction defaultStyles(scaleFactor) {\n    return {\n        font: 'helvetica', // helvetica, times, courier\n        fontStyle: 'normal', // normal, bold, italic, bolditalic\n        overflow: 'linebreak', // linebreak, ellipsize, visible or hidden\n        fillColor: false, // Either false for transparent, rbg array e.g. [255, 255, 255] or gray level e.g 200\n        textColor: 20,\n        halign: 'left', // left, center, right, justify\n        valign: 'top', // top, middle, bottom\n        fontSize: 10,\n        cellPadding: 5 / scaleFactor, // number or {top,left,right,left,vertical,horizontal}\n        lineColor: 200,\n        lineWidth: 0,\n        cellWidth: 'auto', // 'auto'|'wrap'|number\n        minCellHeight: 0,\n        minCellWidth: 0,\n    };\n}\nfunction getTheme(name) {\n    var themes = {\n        striped: {\n            table: { fillColor: 255, textColor: 80, fontStyle: 'normal' },\n            head: { textColor: 255, fillColor: [41, 128, 185], fontStyle: 'bold' },\n            body: {},\n            foot: { textColor: 255, fillColor: [41, 128, 185], fontStyle: 'bold' },\n            alternateRow: { fillColor: 245 },\n        },\n        grid: {\n            table: {\n                fillColor: 255,\n                textColor: 80,\n                fontStyle: 'normal',\n                lineWidth: 0.1,\n            },\n            head: {\n                textColor: 255,\n                fillColor: [26, 188, 156],\n                fontStyle: 'bold',\n                lineWidth: 0,\n            },\n            body: {},\n            foot: {\n                textColor: 255,\n                fillColor: [26, 188, 156],\n                fontStyle: 'bold',\n                lineWidth: 0,\n            },\n            alternateRow: {},\n        },\n        plain: { head: { fontStyle: 'bold' }, foot: { fontStyle: 'bold' } },\n    };\n    return themes[name];\n}\n\nfunction getStringWidth(text, styles, doc) {\n    doc.applyStyles(styles, true);\n    var textArr = Array.isArray(text) ? text : [text];\n    var widestLineWidth = textArr\n        .map(function (text) { return doc.getTextWidth(text); })\n        .reduce(function (a, b) { return Math.max(a, b); }, 0);\n    return widestLineWidth;\n}\nfunction addTableBorder(doc, table, startPos, cursor) {\n    var lineWidth = table.settings.tableLineWidth;\n    var lineColor = table.settings.tableLineColor;\n    doc.applyStyles({ lineWidth: lineWidth, lineColor: lineColor });\n    var fillStyle = getFillStyle(lineWidth, false);\n    if (fillStyle) {\n        doc.rect(startPos.x, startPos.y, table.getWidth(doc.pageSize().width), cursor.y - startPos.y, fillStyle);\n    }\n}\nfunction getFillStyle(lineWidth, fillColor) {\n    var drawLine = lineWidth > 0;\n    var drawBackground = fillColor || fillColor === 0;\n    if (drawLine && drawBackground) {\n        return 'DF'; // Fill then stroke\n    }\n    else if (drawLine) {\n        return 'S'; // Only stroke (transparent background)\n    }\n    else if (drawBackground) {\n        return 'F'; // Only fill, no stroke\n    }\n    else {\n        return null;\n    }\n}\nfunction parseSpacing(value, defaultValue) {\n    var _a, _b, _c, _d;\n    value = value || defaultValue;\n    if (Array.isArray(value)) {\n        if (value.length >= 4) {\n            return {\n                top: value[0],\n                right: value[1],\n                bottom: value[2],\n                left: value[3],\n            };\n        }\n        else if (value.length === 3) {\n            return {\n                top: value[0],\n                right: value[1],\n                bottom: value[2],\n                left: value[1],\n            };\n        }\n        else if (value.length === 2) {\n            return {\n                top: value[0],\n                right: value[1],\n                bottom: value[0],\n                left: value[1],\n            };\n        }\n        else if (value.length === 1) {\n            value = value[0];\n        }\n        else {\n            value = defaultValue;\n        }\n    }\n    if (typeof value === 'object') {\n        if (typeof value.vertical === 'number') {\n            value.top = value.vertical;\n            value.bottom = value.vertical;\n        }\n        if (typeof value.horizontal === 'number') {\n            value.right = value.horizontal;\n            value.left = value.horizontal;\n        }\n        return {\n            left: (_a = value.left) !== null && _a !== void 0 ? _a : defaultValue,\n            top: (_b = value.top) !== null && _b !== void 0 ? _b : defaultValue,\n            right: (_c = value.right) !== null && _c !== void 0 ? _c : defaultValue,\n            bottom: (_d = value.bottom) !== null && _d !== void 0 ? _d : defaultValue,\n        };\n    }\n    if (typeof value !== 'number') {\n        value = defaultValue;\n    }\n    return { top: value, right: value, bottom: value, left: value };\n}\nfunction getPageAvailableWidth(doc, table) {\n    var margins = parseSpacing(table.settings.margin, 0);\n    return doc.pageSize().width - (margins.left + margins.right);\n}\n\n// Limitations\n// - No support for border spacing\n// - No support for transparency\nfunction parseCss(supportedFonts, element, scaleFactor, style, window) {\n    var result = {};\n    var pxScaleFactor = 96 / 72;\n    var backgroundColor = parseColor(element, function (elem) {\n        return window.getComputedStyle(elem)['backgroundColor'];\n    });\n    if (backgroundColor != null)\n        result.fillColor = backgroundColor;\n    var textColor = parseColor(element, function (elem) {\n        return window.getComputedStyle(elem)['color'];\n    });\n    if (textColor != null)\n        result.textColor = textColor;\n    var padding = parsePadding(style, scaleFactor);\n    if (padding)\n        result.cellPadding = padding;\n    var borderColorSide = 'borderTopColor';\n    var finalScaleFactor = pxScaleFactor * scaleFactor;\n    var btw = style.borderTopWidth;\n    if (style.borderBottomWidth === btw &&\n        style.borderRightWidth === btw &&\n        style.borderLeftWidth === btw) {\n        var borderWidth = (parseFloat(btw) || 0) / finalScaleFactor;\n        if (borderWidth)\n            result.lineWidth = borderWidth;\n    }\n    else {\n        result.lineWidth = {\n            top: (parseFloat(style.borderTopWidth) || 0) / finalScaleFactor,\n            right: (parseFloat(style.borderRightWidth) || 0) / finalScaleFactor,\n            bottom: (parseFloat(style.borderBottomWidth) || 0) / finalScaleFactor,\n            left: (parseFloat(style.borderLeftWidth) || 0) / finalScaleFactor,\n        };\n        // Choose border color of first available side\n        // could be improved by supporting object as lineColor\n        if (!result.lineWidth.top) {\n            if (result.lineWidth.right) {\n                borderColorSide = 'borderRightColor';\n            }\n            else if (result.lineWidth.bottom) {\n                borderColorSide = 'borderBottomColor';\n            }\n            else if (result.lineWidth.left) {\n                borderColorSide = 'borderLeftColor';\n            }\n        }\n    }\n    var borderColor = parseColor(element, function (elem) {\n        return window.getComputedStyle(elem)[borderColorSide];\n    });\n    if (borderColor != null)\n        result.lineColor = borderColor;\n    var accepted = ['left', 'right', 'center', 'justify'];\n    if (accepted.indexOf(style.textAlign) !== -1) {\n        result.halign = style.textAlign;\n    }\n    accepted = ['middle', 'bottom', 'top'];\n    if (accepted.indexOf(style.verticalAlign) !== -1) {\n        result.valign = style.verticalAlign;\n    }\n    var res = parseInt(style.fontSize || '');\n    if (!isNaN(res))\n        result.fontSize = res / pxScaleFactor;\n    var fontStyle = parseFontStyle(style);\n    if (fontStyle)\n        result.fontStyle = fontStyle;\n    var font = (style.fontFamily || '').toLowerCase();\n    if (supportedFonts.indexOf(font) !== -1) {\n        result.font = font;\n    }\n    return result;\n}\nfunction parseFontStyle(style) {\n    var res = '';\n    if (style.fontWeight === 'bold' ||\n        style.fontWeight === 'bolder' ||\n        parseInt(style.fontWeight) >= 700) {\n        res = 'bold';\n    }\n    if (style.fontStyle === 'italic' || style.fontStyle === 'oblique') {\n        res += 'italic';\n    }\n    return res;\n}\nfunction parseColor(element, styleGetter) {\n    var cssColor = realColor(element, styleGetter);\n    if (!cssColor)\n        return null;\n    var rgba = cssColor.match(/^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d*\\.?\\d*))?\\)$/);\n    if (!rgba || !Array.isArray(rgba)) {\n        return null;\n    }\n    var color = [\n        parseInt(rgba[1]),\n        parseInt(rgba[2]),\n        parseInt(rgba[3]),\n    ];\n    var alpha = parseInt(rgba[4]);\n    if (alpha === 0 || isNaN(color[0]) || isNaN(color[1]) || isNaN(color[2])) {\n        return null;\n    }\n    return color;\n}\nfunction realColor(elem, styleGetter) {\n    var bg = styleGetter(elem);\n    if (bg === 'rgba(0, 0, 0, 0)' ||\n        bg === 'transparent' ||\n        bg === 'initial' ||\n        bg === 'inherit') {\n        if (elem.parentElement == null) {\n            return null;\n        }\n        return realColor(elem.parentElement, styleGetter);\n    }\n    else {\n        return bg;\n    }\n}\nfunction parsePadding(style, scaleFactor) {\n    var val = [\n        style.paddingTop,\n        style.paddingRight,\n        style.paddingBottom,\n        style.paddingLeft,\n    ];\n    var pxScaleFactor = 96 / (72 / scaleFactor);\n    var linePadding = (parseInt(style.lineHeight) - parseInt(style.fontSize)) / scaleFactor / 2;\n    var inputPadding = val.map(function (n) {\n        return parseInt(n || '0') / pxScaleFactor;\n    });\n    var padding = parseSpacing(inputPadding, 0);\n    if (linePadding > padding.top) {\n        padding.top = linePadding;\n    }\n    if (linePadding > padding.bottom) {\n        padding.bottom = linePadding;\n    }\n    return padding;\n}\n\nfunction parseHtml(doc, input, window, includeHiddenHtml, useCss) {\n    var _a, _b;\n    if (includeHiddenHtml === void 0) { includeHiddenHtml = false; }\n    if (useCss === void 0) { useCss = false; }\n    var tableElement;\n    if (typeof input === 'string') {\n        tableElement = window.document.querySelector(input);\n    }\n    else {\n        tableElement = input;\n    }\n    var supportedFonts = Object.keys(doc.getFontList());\n    var scaleFactor = doc.scaleFactor();\n    var head = [], body = [], foot = [];\n    if (!tableElement) {\n        console.error('Html table could not be found with input: ', input);\n        return { head: head, body: body, foot: foot };\n    }\n    for (var i = 0; i < tableElement.rows.length; i++) {\n        var element = tableElement.rows[i];\n        var tagName = (_b = (_a = element === null || element === void 0 ? void 0 : element.parentElement) === null || _a === void 0 ? void 0 : _a.tagName) === null || _b === void 0 ? void 0 : _b.toLowerCase();\n        var row = parseRowContent(supportedFonts, scaleFactor, window, element, includeHiddenHtml, useCss);\n        if (!row)\n            continue;\n        if (tagName === 'thead') {\n            head.push(row);\n        }\n        else if (tagName === 'tfoot') {\n            foot.push(row);\n        }\n        else {\n            // Add to body both if parent is tbody or table\n            body.push(row);\n        }\n    }\n    return { head: head, body: body, foot: foot };\n}\nfunction parseRowContent(supportedFonts, scaleFactor, window, row, includeHidden, useCss) {\n    var resultRow = new HtmlRowInput(row);\n    for (var i = 0; i < row.cells.length; i++) {\n        var cell = row.cells[i];\n        var style_1 = window.getComputedStyle(cell);\n        if (includeHidden || style_1.display !== 'none') {\n            var cellStyles = void 0;\n            if (useCss) {\n                cellStyles = parseCss(supportedFonts, cell, scaleFactor, style_1, window);\n            }\n            resultRow.push({\n                rowSpan: cell.rowSpan,\n                colSpan: cell.colSpan,\n                styles: cellStyles,\n                _element: cell,\n                content: parseCellContent(cell),\n            });\n        }\n    }\n    var style = window.getComputedStyle(row);\n    if (resultRow.length > 0 && (includeHidden || style.display !== 'none')) {\n        return resultRow;\n    }\n}\nfunction parseCellContent(orgCell) {\n    // Work on cloned node to make sure no changes are applied to html table\n    var cell = orgCell.cloneNode(true);\n    // Remove extra space and line breaks in markup to make it more similar to\n    // what would be shown in html\n    cell.innerHTML = cell.innerHTML.replace(/\\n/g, '').replace(/ +/g, ' ');\n    // Preserve <br> tags as line breaks in the pdf\n    cell.innerHTML = cell.innerHTML\n        .split(/<br.*?>/) //start with '<br' and ends with '>'.\n        .map(function (part) { return part.trim(); })\n        .join('\\n');\n    // innerText for ie\n    return cell.innerText || cell.textContent || '';\n}\n\nfunction validateInput(global, document, current) {\n    for (var _i = 0, _a = [global, document, current]; _i < _a.length; _i++) {\n        var options = _a[_i];\n        if (options && typeof options !== 'object') {\n            console.error('The options parameter should be of type object, is: ' + typeof options);\n        }\n        if (options.startY && typeof options.startY !== 'number') {\n            console.error('Invalid value for startY option', options.startY);\n            delete options.startY;\n        }\n    }\n}\n\n/* eslint-disable @typescript-eslint/no-unused-vars */\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\nfunction assign(target, s, s1, s2, s3) {\n    if (target == null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n    }\n    var to = Object(target);\n    for (var index = 1; index < arguments.length; index++) {\n        // eslint-disable-next-line prefer-rest-params\n        var nextSource = arguments[index];\n        if (nextSource != null) {\n            // Skip over if undefined or null\n            for (var nextKey in nextSource) {\n                // Avoid bugs when hasOwnProperty is shadowed\n                if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                    to[nextKey] = nextSource[nextKey];\n                }\n            }\n        }\n    }\n    return to;\n}\n\nfunction parseInput(d, current) {\n    var doc = new DocHandler(d);\n    var document = doc.getDocumentOptions();\n    var global = doc.getGlobalOptions();\n    validateInput(global, document, current);\n    var options = assign({}, global, document, current);\n    var win;\n    if (typeof window !== 'undefined') {\n        win = window;\n    }\n    var styles = parseStyles(global, document, current);\n    var hooks = parseHooks(global, document, current);\n    var settings = parseSettings(doc, options);\n    var content = parseContent$1(doc, options, win);\n    return { id: current.tableId, content: content, hooks: hooks, styles: styles, settings: settings };\n}\nfunction parseStyles(gInput, dInput, cInput) {\n    var styleOptions = {\n        styles: {},\n        headStyles: {},\n        bodyStyles: {},\n        footStyles: {},\n        alternateRowStyles: {},\n        columnStyles: {},\n    };\n    var _loop_1 = function (prop) {\n        if (prop === 'columnStyles') {\n            var global_1 = gInput[prop];\n            var document_1 = dInput[prop];\n            var current = cInput[prop];\n            styleOptions.columnStyles = assign({}, global_1, document_1, current);\n        }\n        else {\n            var allOptions = [gInput, dInput, cInput];\n            var styles = allOptions.map(function (opts) { return opts[prop] || {}; });\n            styleOptions[prop] = assign({}, styles[0], styles[1], styles[2]);\n        }\n    };\n    for (var _i = 0, _a = Object.keys(styleOptions); _i < _a.length; _i++) {\n        var prop = _a[_i];\n        _loop_1(prop);\n    }\n    return styleOptions;\n}\nfunction parseHooks(global, document, current) {\n    var allOptions = [global, document, current];\n    var result = {\n        didParseCell: [],\n        willDrawCell: [],\n        didDrawCell: [],\n        willDrawPage: [],\n        didDrawPage: [],\n    };\n    for (var _i = 0, allOptions_1 = allOptions; _i < allOptions_1.length; _i++) {\n        var options = allOptions_1[_i];\n        if (options.didParseCell)\n            result.didParseCell.push(options.didParseCell);\n        if (options.willDrawCell)\n            result.willDrawCell.push(options.willDrawCell);\n        if (options.didDrawCell)\n            result.didDrawCell.push(options.didDrawCell);\n        if (options.willDrawPage)\n            result.willDrawPage.push(options.willDrawPage);\n        if (options.didDrawPage)\n            result.didDrawPage.push(options.didDrawPage);\n    }\n    return result;\n}\nfunction parseSettings(doc, options) {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m;\n    var margin = parseSpacing(options.margin, 40 / doc.scaleFactor());\n    var startY = (_a = getStartY(doc, options.startY)) !== null && _a !== void 0 ? _a : margin.top;\n    var showFoot;\n    if (options.showFoot === true) {\n        showFoot = 'everyPage';\n    }\n    else if (options.showFoot === false) {\n        showFoot = 'never';\n    }\n    else {\n        showFoot = (_b = options.showFoot) !== null && _b !== void 0 ? _b : 'everyPage';\n    }\n    var showHead;\n    if (options.showHead === true) {\n        showHead = 'everyPage';\n    }\n    else if (options.showHead === false) {\n        showHead = 'never';\n    }\n    else {\n        showHead = (_c = options.showHead) !== null && _c !== void 0 ? _c : 'everyPage';\n    }\n    var useCss = (_d = options.useCss) !== null && _d !== void 0 ? _d : false;\n    var theme = options.theme || (useCss ? 'plain' : 'striped');\n    var horizontalPageBreak = !!options.horizontalPageBreak;\n    var horizontalPageBreakRepeat = (_e = options.horizontalPageBreakRepeat) !== null && _e !== void 0 ? _e : null;\n    return {\n        includeHiddenHtml: (_f = options.includeHiddenHtml) !== null && _f !== void 0 ? _f : false,\n        useCss: useCss,\n        theme: theme,\n        startY: startY,\n        margin: margin,\n        pageBreak: (_g = options.pageBreak) !== null && _g !== void 0 ? _g : 'auto',\n        rowPageBreak: (_h = options.rowPageBreak) !== null && _h !== void 0 ? _h : 'auto',\n        tableWidth: (_j = options.tableWidth) !== null && _j !== void 0 ? _j : 'auto',\n        showHead: showHead,\n        showFoot: showFoot,\n        tableLineWidth: (_k = options.tableLineWidth) !== null && _k !== void 0 ? _k : 0,\n        tableLineColor: (_l = options.tableLineColor) !== null && _l !== void 0 ? _l : 200,\n        horizontalPageBreak: horizontalPageBreak,\n        horizontalPageBreakRepeat: horizontalPageBreakRepeat,\n        horizontalPageBreakBehaviour: (_m = options.horizontalPageBreakBehaviour) !== null && _m !== void 0 ? _m : 'afterAllRows',\n    };\n}\nfunction getStartY(doc, userStartY) {\n    var previous = doc.getLastAutoTable();\n    var sf = doc.scaleFactor();\n    var currentPage = doc.pageNumber();\n    var isSamePageAsPreviousTable = false;\n    if (previous && previous.startPageNumber) {\n        var endingPage = previous.startPageNumber + previous.pageNumber - 1;\n        isSamePageAsPreviousTable = endingPage === currentPage;\n    }\n    if (typeof userStartY === 'number') {\n        return userStartY;\n    }\n    else if (userStartY == null || userStartY === false) {\n        if (isSamePageAsPreviousTable && (previous === null || previous === void 0 ? void 0 : previous.finalY) != null) {\n            // Some users had issues with overlapping tables when they used multiple\n            // tables without setting startY so setting it here to a sensible default.\n            return previous.finalY + 20 / sf;\n        }\n    }\n    return null;\n}\nfunction parseContent$1(doc, options, window) {\n    var head = options.head || [];\n    var body = options.body || [];\n    var foot = options.foot || [];\n    if (options.html) {\n        var hidden = options.includeHiddenHtml;\n        if (window) {\n            var htmlContent = parseHtml(doc, options.html, window, hidden, options.useCss) || {};\n            head = htmlContent.head || head;\n            body = htmlContent.body || head;\n            foot = htmlContent.foot || head;\n        }\n        else {\n            console.error('Cannot parse html in non browser environment');\n        }\n    }\n    var columns = options.columns || parseColumns(head, body, foot);\n    return { columns: columns, head: head, body: body, foot: foot };\n}\nfunction parseColumns(head, body, foot) {\n    var firstRow = head[0] || body[0] || foot[0] || [];\n    var result = [];\n    Object.keys(firstRow)\n        .filter(function (key) { return key !== '_element'; })\n        .forEach(function (key) {\n        var colSpan = 1;\n        var input;\n        if (Array.isArray(firstRow)) {\n            input = firstRow[parseInt(key)];\n        }\n        else {\n            input = firstRow[key];\n        }\n        if (typeof input === 'object' && !Array.isArray(input)) {\n            colSpan = (input === null || input === void 0 ? void 0 : input.colSpan) || 1;\n        }\n        for (var i = 0; i < colSpan; i++) {\n            var id = void 0;\n            if (Array.isArray(firstRow)) {\n                id = result.length;\n            }\n            else {\n                id = key + (i > 0 ? \"_\".concat(i) : '');\n            }\n            var rowResult = { dataKey: id };\n            result.push(rowResult);\n        }\n    });\n    return result;\n}\n\nvar HookData = /** @class */ (function () {\n    function HookData(doc, table, cursor) {\n        this.table = table;\n        this.pageNumber = table.pageNumber;\n        this.settings = table.settings;\n        this.cursor = cursor;\n        this.doc = doc.getDocument();\n    }\n    return HookData;\n}());\nvar CellHookData = /** @class */ (function (_super) {\n    __extends(CellHookData, _super);\n    function CellHookData(doc, table, cell, row, column, cursor) {\n        var _this = _super.call(this, doc, table, cursor) || this;\n        _this.cell = cell;\n        _this.row = row;\n        _this.column = column;\n        _this.section = row.section;\n        return _this;\n    }\n    return CellHookData;\n}(HookData));\n\nvar Table = /** @class */ (function () {\n    function Table(input, content) {\n        this.pageNumber = 1;\n        this.id = input.id;\n        this.settings = input.settings;\n        this.styles = input.styles;\n        this.hooks = input.hooks;\n        this.columns = content.columns;\n        this.head = content.head;\n        this.body = content.body;\n        this.foot = content.foot;\n    }\n    Table.prototype.getHeadHeight = function (columns) {\n        return this.head.reduce(function (acc, row) { return acc + row.getMaxCellHeight(columns); }, 0);\n    };\n    Table.prototype.getFootHeight = function (columns) {\n        return this.foot.reduce(function (acc, row) { return acc + row.getMaxCellHeight(columns); }, 0);\n    };\n    Table.prototype.allRows = function () {\n        return this.head.concat(this.body).concat(this.foot);\n    };\n    Table.prototype.callCellHooks = function (doc, handlers, cell, row, column, cursor) {\n        for (var _i = 0, handlers_1 = handlers; _i < handlers_1.length; _i++) {\n            var handler = handlers_1[_i];\n            var data = new CellHookData(doc, this, cell, row, column, cursor);\n            var result = handler(data) === false;\n            // Make sure text is always string[] since user can assign string\n            cell.text = Array.isArray(cell.text) ? cell.text : [cell.text];\n            if (result) {\n                return false;\n            }\n        }\n        return true;\n    };\n    Table.prototype.callEndPageHooks = function (doc, cursor) {\n        doc.applyStyles(doc.userStyles);\n        for (var _i = 0, _a = this.hooks.didDrawPage; _i < _a.length; _i++) {\n            var handler = _a[_i];\n            handler(new HookData(doc, this, cursor));\n        }\n    };\n    Table.prototype.callWillDrawPageHooks = function (doc, cursor) {\n        for (var _i = 0, _a = this.hooks.willDrawPage; _i < _a.length; _i++) {\n            var handler = _a[_i];\n            handler(new HookData(doc, this, cursor));\n        }\n    };\n    Table.prototype.getWidth = function (pageWidth) {\n        if (typeof this.settings.tableWidth === 'number') {\n            return this.settings.tableWidth;\n        }\n        else if (this.settings.tableWidth === 'wrap') {\n            var wrappedWidth = this.columns.reduce(function (total, col) { return total + col.wrappedWidth; }, 0);\n            return wrappedWidth;\n        }\n        else {\n            var margin = this.settings.margin;\n            return pageWidth - margin.left - margin.right;\n        }\n    };\n    return Table;\n}());\nvar Row = /** @class */ (function () {\n    function Row(raw, index, section, cells, spansMultiplePages) {\n        if (spansMultiplePages === void 0) { spansMultiplePages = false; }\n        this.height = 0;\n        this.raw = raw;\n        if (raw instanceof HtmlRowInput) {\n            this.raw = raw._element;\n            this.element = raw._element;\n        }\n        this.index = index;\n        this.section = section;\n        this.cells = cells;\n        this.spansMultiplePages = spansMultiplePages;\n    }\n    Row.prototype.getMaxCellHeight = function (columns) {\n        var _this = this;\n        return columns.reduce(function (acc, column) { var _a; return Math.max(acc, ((_a = _this.cells[column.index]) === null || _a === void 0 ? void 0 : _a.height) || 0); }, 0);\n    };\n    Row.prototype.hasRowSpan = function (columns) {\n        var _this = this;\n        return (columns.filter(function (column) {\n            var cell = _this.cells[column.index];\n            if (!cell)\n                return false;\n            return cell.rowSpan > 1;\n        }).length > 0);\n    };\n    Row.prototype.canEntireRowFit = function (height, columns) {\n        return this.getMaxCellHeight(columns) <= height;\n    };\n    Row.prototype.getMinimumRowHeight = function (columns, doc) {\n        var _this = this;\n        return columns.reduce(function (acc, column) {\n            var cell = _this.cells[column.index];\n            if (!cell)\n                return 0;\n            var lineHeight = doc.getLineHeight(cell.styles.fontSize);\n            var vPadding = cell.padding('vertical');\n            var oneRowHeight = vPadding + lineHeight;\n            return oneRowHeight > acc ? oneRowHeight : acc;\n        }, 0);\n    };\n    return Row;\n}());\nvar Cell = /** @class */ (function () {\n    function Cell(raw, styles, section) {\n        var _a;\n        this.contentHeight = 0;\n        this.contentWidth = 0;\n        this.wrappedWidth = 0;\n        this.minReadableWidth = 0;\n        this.minWidth = 0;\n        this.width = 0;\n        this.height = 0;\n        this.x = 0;\n        this.y = 0;\n        this.styles = styles;\n        this.section = section;\n        this.raw = raw;\n        var content = raw;\n        if (raw != null && typeof raw === 'object' && !Array.isArray(raw)) {\n            this.rowSpan = raw.rowSpan || 1;\n            this.colSpan = raw.colSpan || 1;\n            content = (_a = raw.content) !== null && _a !== void 0 ? _a : raw;\n            if (raw._element) {\n                this.raw = raw._element;\n            }\n        }\n        else {\n            this.rowSpan = 1;\n            this.colSpan = 1;\n        }\n        // Stringify 0 and false, but not undefined or null\n        var text = content != null ? '' + content : '';\n        var splitRegex = /\\r\\n|\\r|\\n/g;\n        this.text = text.split(splitRegex);\n    }\n    Cell.prototype.getTextPos = function () {\n        var y;\n        if (this.styles.valign === 'top') {\n            y = this.y + this.padding('top');\n        }\n        else if (this.styles.valign === 'bottom') {\n            y = this.y + this.height - this.padding('bottom');\n        }\n        else {\n            var netHeight = this.height - this.padding('vertical');\n            y = this.y + netHeight / 2 + this.padding('top');\n        }\n        var x;\n        if (this.styles.halign === 'right') {\n            x = this.x + this.width - this.padding('right');\n        }\n        else if (this.styles.halign === 'center') {\n            var netWidth = this.width - this.padding('horizontal');\n            x = this.x + netWidth / 2 + this.padding('left');\n        }\n        else {\n            x = this.x + this.padding('left');\n        }\n        return { x: x, y: y };\n    };\n    // TODO (v4): replace parameters with only (lineHeight)\n    Cell.prototype.getContentHeight = function (scaleFactor, lineHeightFactor) {\n        if (lineHeightFactor === void 0) { lineHeightFactor = 1.15; }\n        var lineCount = Array.isArray(this.text) ? this.text.length : 1;\n        var lineHeight = (this.styles.fontSize / scaleFactor) * lineHeightFactor;\n        var height = lineCount * lineHeight + this.padding('vertical');\n        return Math.max(height, this.styles.minCellHeight);\n    };\n    Cell.prototype.padding = function (name) {\n        var padding = parseSpacing(this.styles.cellPadding, 0);\n        if (name === 'vertical') {\n            return padding.top + padding.bottom;\n        }\n        else if (name === 'horizontal') {\n            return padding.left + padding.right;\n        }\n        else {\n            return padding[name];\n        }\n    };\n    return Cell;\n}());\nvar Column = /** @class */ (function () {\n    function Column(dataKey, raw, index) {\n        this.wrappedWidth = 0;\n        this.minReadableWidth = 0;\n        this.minWidth = 0;\n        this.width = 0;\n        this.dataKey = dataKey;\n        this.raw = raw;\n        this.index = index;\n    }\n    Column.prototype.getMaxCustomCellWidth = function (table) {\n        var max = 0;\n        for (var _i = 0, _a = table.allRows(); _i < _a.length; _i++) {\n            var row = _a[_i];\n            var cell = row.cells[this.index];\n            if (cell && typeof cell.styles.cellWidth === 'number') {\n                max = Math.max(max, cell.styles.cellWidth);\n            }\n        }\n        return max;\n    };\n    return Column;\n}());\n\n/**\n * Calculate the column widths\n */\nfunction calculateWidths(doc, table) {\n    calculate(doc, table);\n    var resizableColumns = [];\n    var initialTableWidth = 0;\n    table.columns.forEach(function (column) {\n        var customWidth = column.getMaxCustomCellWidth(table);\n        if (customWidth) {\n            // final column width\n            column.width = customWidth;\n        }\n        else {\n            // initial column width (will be resized)\n            column.width = column.wrappedWidth;\n            resizableColumns.push(column);\n        }\n        initialTableWidth += column.width;\n    });\n    // width difference that needs to be distributed\n    var resizeWidth = table.getWidth(doc.pageSize().width) - initialTableWidth;\n    // first resize attempt: with respect to minReadableWidth and minWidth\n    if (resizeWidth) {\n        resizeWidth = resizeColumns(resizableColumns, resizeWidth, function (column) {\n            return Math.max(column.minReadableWidth, column.minWidth);\n        });\n    }\n    // second resize attempt: ignore minReadableWidth but respect minWidth\n    if (resizeWidth) {\n        resizeWidth = resizeColumns(resizableColumns, resizeWidth, function (column) { return column.minWidth; });\n    }\n    resizeWidth = Math.abs(resizeWidth);\n    if (!table.settings.horizontalPageBreak &&\n        resizeWidth > 0.1 / doc.scaleFactor()) {\n        // Table can't get smaller due to custom-width or minWidth restrictions\n        // We can't really do much here. Up to user to for example\n        // reduce font size, increase page size or remove custom cell widths\n        // to allow more columns to be reduced in size\n        resizeWidth = resizeWidth < 1 ? resizeWidth : Math.round(resizeWidth);\n        console.warn(\"Of the table content, \".concat(resizeWidth, \" units width could not fit page\"));\n    }\n    applyColSpans(table);\n    fitContent(table, doc);\n    applyRowSpans(table);\n}\nfunction calculate(doc, table) {\n    var sf = doc.scaleFactor();\n    var horizontalPageBreak = table.settings.horizontalPageBreak;\n    var availablePageWidth = getPageAvailableWidth(doc, table);\n    table.allRows().forEach(function (row) {\n        for (var _i = 0, _a = table.columns; _i < _a.length; _i++) {\n            var column = _a[_i];\n            var cell = row.cells[column.index];\n            if (!cell)\n                continue;\n            var hooks = table.hooks.didParseCell;\n            table.callCellHooks(doc, hooks, cell, row, column, null);\n            var padding = cell.padding('horizontal');\n            cell.contentWidth = getStringWidth(cell.text, cell.styles, doc) + padding;\n            // Using [^\\S\\u00A0] instead of \\s ensures that we split the text on all\n            // whitespace except non-breaking spaces (\\u00A0). We need to preserve\n            // them in the split process to ensure correct word separation and width\n            // calculation.\n            var longestWordWidth = getStringWidth(cell.text.join(' ').split(/[^\\S\\u00A0]+/), cell.styles, doc);\n            cell.minReadableWidth = longestWordWidth + cell.padding('horizontal');\n            if (typeof cell.styles.cellWidth === 'number') {\n                cell.minWidth = cell.styles.cellWidth;\n                cell.wrappedWidth = cell.styles.cellWidth;\n            }\n            else if (cell.styles.cellWidth === 'wrap' ||\n                horizontalPageBreak === true) {\n                // cell width should not be more than available page width\n                if (cell.contentWidth > availablePageWidth) {\n                    cell.minWidth = availablePageWidth;\n                    cell.wrappedWidth = availablePageWidth;\n                }\n                else {\n                    cell.minWidth = cell.contentWidth;\n                    cell.wrappedWidth = cell.contentWidth;\n                }\n            }\n            else {\n                // auto\n                var defaultMinWidth = 10 / sf;\n                cell.minWidth = cell.styles.minCellWidth || defaultMinWidth;\n                cell.wrappedWidth = cell.contentWidth;\n                if (cell.minWidth > cell.wrappedWidth) {\n                    cell.wrappedWidth = cell.minWidth;\n                }\n            }\n        }\n    });\n    table.allRows().forEach(function (row) {\n        for (var _i = 0, _a = table.columns; _i < _a.length; _i++) {\n            var column = _a[_i];\n            var cell = row.cells[column.index];\n            // For now we ignore the minWidth and wrappedWidth of colspan cells when calculating colspan widths.\n            // Could probably be improved upon however.\n            if (cell && cell.colSpan === 1) {\n                column.wrappedWidth = Math.max(column.wrappedWidth, cell.wrappedWidth);\n                column.minWidth = Math.max(column.minWidth, cell.minWidth);\n                column.minReadableWidth = Math.max(column.minReadableWidth, cell.minReadableWidth);\n            }\n            else {\n                // Respect cellWidth set in columnStyles even if there is no cells for this column\n                // or if the column only have colspan cells. Since the width of colspan cells\n                // does not affect the width of columns, setting columnStyles cellWidth enables the\n                // user to at least do it manually.\n                // Note that this is not perfect for now since for example row and table styles are\n                // not accounted for\n                var columnStyles = table.styles.columnStyles[column.dataKey] ||\n                    table.styles.columnStyles[column.index] ||\n                    {};\n                var cellWidth = columnStyles.cellWidth || columnStyles.minCellWidth;\n                if (cellWidth && typeof cellWidth === 'number') {\n                    column.minWidth = cellWidth;\n                    column.wrappedWidth = cellWidth;\n                }\n            }\n            if (cell) {\n                // Make sure all columns get at least min width even though width calculations are not based on them\n                if (cell.colSpan > 1 && !column.minWidth) {\n                    column.minWidth = cell.minWidth;\n                }\n                if (cell.colSpan > 1 && !column.wrappedWidth) {\n                    column.wrappedWidth = cell.minWidth;\n                }\n            }\n        }\n    });\n}\n/**\n * Distribute resizeWidth on passed resizable columns\n */\nfunction resizeColumns(columns, resizeWidth, getMinWidth) {\n    var initialResizeWidth = resizeWidth;\n    var sumWrappedWidth = columns.reduce(function (acc, column) { return acc + column.wrappedWidth; }, 0);\n    for (var i = 0; i < columns.length; i++) {\n        var column = columns[i];\n        var ratio = column.wrappedWidth / sumWrappedWidth;\n        var suggestedChange = initialResizeWidth * ratio;\n        var suggestedWidth = column.width + suggestedChange;\n        var minWidth = getMinWidth(column);\n        var newWidth = suggestedWidth < minWidth ? minWidth : suggestedWidth;\n        resizeWidth -= newWidth - column.width;\n        column.width = newWidth;\n    }\n    resizeWidth = Math.round(resizeWidth * 1e10) / 1e10;\n    // Run the resizer again if there's remaining width needs\n    // to be distributed and there're columns that can be resized\n    if (resizeWidth) {\n        var resizableColumns = columns.filter(function (column) {\n            return resizeWidth < 0\n                ? column.width > getMinWidth(column) // check if column can shrink\n                : true; // check if column can grow\n        });\n        if (resizableColumns.length) {\n            resizeWidth = resizeColumns(resizableColumns, resizeWidth, getMinWidth);\n        }\n    }\n    return resizeWidth;\n}\nfunction applyRowSpans(table) {\n    var rowSpanCells = {};\n    var colRowSpansLeft = 1;\n    var all = table.allRows();\n    for (var rowIndex = 0; rowIndex < all.length; rowIndex++) {\n        var row = all[rowIndex];\n        for (var _i = 0, _a = table.columns; _i < _a.length; _i++) {\n            var column = _a[_i];\n            var data = rowSpanCells[column.index];\n            if (colRowSpansLeft > 1) {\n                colRowSpansLeft--;\n                delete row.cells[column.index];\n            }\n            else if (data) {\n                data.cell.height += row.height;\n                colRowSpansLeft = data.cell.colSpan;\n                delete row.cells[column.index];\n                data.left--;\n                if (data.left <= 1) {\n                    delete rowSpanCells[column.index];\n                }\n            }\n            else {\n                var cell = row.cells[column.index];\n                if (!cell) {\n                    continue;\n                }\n                cell.height = row.height;\n                if (cell.rowSpan > 1) {\n                    var remaining = all.length - rowIndex;\n                    var left = cell.rowSpan > remaining ? remaining : cell.rowSpan;\n                    rowSpanCells[column.index] = { cell: cell, left: left, row: row };\n                }\n            }\n        }\n    }\n}\nfunction applyColSpans(table) {\n    var all = table.allRows();\n    for (var rowIndex = 0; rowIndex < all.length; rowIndex++) {\n        var row = all[rowIndex];\n        var colSpanCell = null;\n        var combinedColSpanWidth = 0;\n        var colSpansLeft = 0;\n        for (var columnIndex = 0; columnIndex < table.columns.length; columnIndex++) {\n            var column = table.columns[columnIndex];\n            // Width and colspan\n            colSpansLeft -= 1;\n            if (colSpansLeft > 1 && table.columns[columnIndex + 1]) {\n                combinedColSpanWidth += column.width;\n                delete row.cells[column.index];\n            }\n            else if (colSpanCell) {\n                var cell = colSpanCell;\n                delete row.cells[column.index];\n                colSpanCell = null;\n                cell.width = column.width + combinedColSpanWidth;\n            }\n            else {\n                var cell = row.cells[column.index];\n                if (!cell)\n                    continue;\n                colSpansLeft = cell.colSpan;\n                combinedColSpanWidth = 0;\n                if (cell.colSpan > 1) {\n                    colSpanCell = cell;\n                    combinedColSpanWidth += column.width;\n                    continue;\n                }\n                cell.width = column.width + combinedColSpanWidth;\n            }\n        }\n    }\n}\nfunction fitContent(table, doc) {\n    var rowSpanHeight = { count: 0, height: 0 };\n    for (var _i = 0, _a = table.allRows(); _i < _a.length; _i++) {\n        var row = _a[_i];\n        for (var _b = 0, _c = table.columns; _b < _c.length; _b++) {\n            var column = _c[_b];\n            var cell = row.cells[column.index];\n            if (!cell)\n                continue;\n            doc.applyStyles(cell.styles, true);\n            var textSpace = cell.width - cell.padding('horizontal');\n            if (cell.styles.overflow === 'linebreak') {\n                // Add one pt to textSpace to fix rounding error\n                cell.text = doc.splitTextToSize(cell.text, textSpace + 1 / doc.scaleFactor(), { fontSize: cell.styles.fontSize });\n            }\n            else if (cell.styles.overflow === 'ellipsize') {\n                cell.text = ellipsize(cell.text, textSpace, cell.styles, doc, '...');\n            }\n            else if (cell.styles.overflow === 'hidden') {\n                cell.text = ellipsize(cell.text, textSpace, cell.styles, doc, '');\n            }\n            else if (typeof cell.styles.overflow === 'function') {\n                var result = cell.styles.overflow(cell.text, textSpace);\n                if (typeof result === 'string') {\n                    cell.text = [result];\n                }\n                else {\n                    cell.text = result;\n                }\n            }\n            cell.contentHeight = cell.getContentHeight(doc.scaleFactor(), doc.getLineHeightFactor());\n            var realContentHeight = cell.contentHeight / cell.rowSpan;\n            if (cell.rowSpan > 1 &&\n                rowSpanHeight.count * rowSpanHeight.height <\n                    realContentHeight * cell.rowSpan) {\n                rowSpanHeight = { height: realContentHeight, count: cell.rowSpan };\n            }\n            else if (rowSpanHeight && rowSpanHeight.count > 0) {\n                if (rowSpanHeight.height > realContentHeight) {\n                    realContentHeight = rowSpanHeight.height;\n                }\n            }\n            if (realContentHeight > row.height) {\n                row.height = realContentHeight;\n            }\n        }\n        rowSpanHeight.count--;\n    }\n}\nfunction ellipsize(text, width, styles, doc, overflow) {\n    return text.map(function (str) { return ellipsizeStr(str, width, styles, doc, overflow); });\n}\nfunction ellipsizeStr(text, width, styles, doc, overflow) {\n    var precision = 10000 * doc.scaleFactor();\n    width = Math.ceil(width * precision) / precision;\n    if (width >= getStringWidth(text, styles, doc)) {\n        return text;\n    }\n    while (width < getStringWidth(text + overflow, styles, doc)) {\n        if (text.length <= 1) {\n            break;\n        }\n        text = text.substring(0, text.length - 1);\n    }\n    return text.trim() + overflow;\n}\n\nfunction createTable(jsPDFDoc, input) {\n    var doc = new DocHandler(jsPDFDoc);\n    var content = parseContent(input, doc.scaleFactor());\n    var table = new Table(input, content);\n    calculateWidths(doc, table);\n    doc.applyStyles(doc.userStyles);\n    return table;\n}\nfunction parseContent(input, sf) {\n    var content = input.content;\n    var columns = createColumns(content.columns);\n    // If no head or foot is set, try generating it with content from columns\n    if (content.head.length === 0) {\n        var sectionRow = generateSectionRow(columns, 'head');\n        if (sectionRow)\n            content.head.push(sectionRow);\n    }\n    if (content.foot.length === 0) {\n        var sectionRow = generateSectionRow(columns, 'foot');\n        if (sectionRow)\n            content.foot.push(sectionRow);\n    }\n    var theme = input.settings.theme;\n    var styles = input.styles;\n    return {\n        columns: columns,\n        head: parseSection('head', content.head, columns, styles, theme, sf),\n        body: parseSection('body', content.body, columns, styles, theme, sf),\n        foot: parseSection('foot', content.foot, columns, styles, theme, sf),\n    };\n}\nfunction parseSection(sectionName, sectionRows, columns, styleProps, theme, scaleFactor) {\n    var rowSpansLeftForColumn = {};\n    var result = sectionRows.map(function (rawRow, rowIndex) {\n        var skippedRowForRowSpans = 0;\n        var cells = {};\n        var colSpansAdded = 0;\n        var columnSpansLeft = 0;\n        for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n            var column = columns_1[_i];\n            if (rowSpansLeftForColumn[column.index] == null ||\n                rowSpansLeftForColumn[column.index].left === 0) {\n                if (columnSpansLeft === 0) {\n                    var rawCell = void 0;\n                    if (Array.isArray(rawRow)) {\n                        rawCell =\n                            rawRow[column.index - colSpansAdded - skippedRowForRowSpans];\n                    }\n                    else {\n                        rawCell = rawRow[column.dataKey];\n                    }\n                    var cellInputStyles = {};\n                    if (typeof rawCell === 'object' && !Array.isArray(rawCell)) {\n                        cellInputStyles = (rawCell === null || rawCell === void 0 ? void 0 : rawCell.styles) || {};\n                    }\n                    var styles = cellStyles(sectionName, column, rowIndex, theme, styleProps, scaleFactor, cellInputStyles);\n                    var cell = new Cell(rawCell, styles, sectionName);\n                    // dataKey is not used internally no more but keep for\n                    // backwards compat in hooks\n                    cells[column.dataKey] = cell;\n                    cells[column.index] = cell;\n                    columnSpansLeft = cell.colSpan - 1;\n                    rowSpansLeftForColumn[column.index] = {\n                        left: cell.rowSpan - 1,\n                        times: columnSpansLeft,\n                    };\n                }\n                else {\n                    columnSpansLeft--;\n                    colSpansAdded++;\n                }\n            }\n            else {\n                rowSpansLeftForColumn[column.index].left--;\n                columnSpansLeft = rowSpansLeftForColumn[column.index].times;\n                skippedRowForRowSpans++;\n            }\n        }\n        return new Row(rawRow, rowIndex, sectionName, cells);\n    });\n    return result;\n}\nfunction generateSectionRow(columns, section) {\n    var sectionRow = {};\n    columns.forEach(function (col) {\n        if (col.raw != null) {\n            var title = getSectionTitle(section, col.raw);\n            if (title != null)\n                sectionRow[col.dataKey] = title;\n        }\n    });\n    return Object.keys(sectionRow).length > 0 ? sectionRow : null;\n}\nfunction getSectionTitle(section, column) {\n    if (section === 'head') {\n        if (typeof column === 'object') {\n            return column.header || null;\n        }\n        else if (typeof column === 'string' || typeof column === 'number') {\n            return column;\n        }\n    }\n    else if (section === 'foot' && typeof column === 'object') {\n        return column.footer;\n    }\n    return null;\n}\nfunction createColumns(columns) {\n    return columns.map(function (input, index) {\n        var _a;\n        var key;\n        if (typeof input === 'object') {\n            key = (_a = input.dataKey) !== null && _a !== void 0 ? _a : index;\n        }\n        else {\n            key = index;\n        }\n        return new Column(key, input, index);\n    });\n}\nfunction cellStyles(sectionName, column, rowIndex, themeName, styles, scaleFactor, cellInputStyles) {\n    var theme = getTheme(themeName);\n    var sectionStyles;\n    if (sectionName === 'head') {\n        sectionStyles = styles.headStyles;\n    }\n    else if (sectionName === 'body') {\n        sectionStyles = styles.bodyStyles;\n    }\n    else if (sectionName === 'foot') {\n        sectionStyles = styles.footStyles;\n    }\n    var otherStyles = assign({}, theme.table, theme[sectionName], styles.styles, sectionStyles);\n    var columnStyles = styles.columnStyles[column.dataKey] ||\n        styles.columnStyles[column.index] ||\n        {};\n    var colStyles = sectionName === 'body' ? columnStyles : {};\n    var rowStyles = sectionName === 'body' && rowIndex % 2 === 0\n        ? assign({}, theme.alternateRow, styles.alternateRowStyles)\n        : {};\n    var defaultStyle = defaultStyles(scaleFactor);\n    var themeStyles = assign({}, defaultStyle, otherStyles, rowStyles, colStyles);\n    return assign(themeStyles, cellInputStyles);\n}\n\n// get columns can be fit into page\nfunction getColumnsCanFitInPage(doc, table, config) {\n    var _a;\n    if (config === void 0) { config = {}; }\n    // Get page width\n    var remainingWidth = getPageAvailableWidth(doc, table);\n    // Get column data key to repeat\n    var repeatColumnsMap = new Map();\n    var colIndexes = [];\n    var columns = [];\n    var horizontalPageBreakRepeat = [];\n    if (Array.isArray(table.settings.horizontalPageBreakRepeat)) {\n        horizontalPageBreakRepeat = table.settings.horizontalPageBreakRepeat;\n        // It can be a single value of type string or number (even number: 0)\n    }\n    else if (typeof table.settings.horizontalPageBreakRepeat === 'string' ||\n        typeof table.settings.horizontalPageBreakRepeat === 'number') {\n        horizontalPageBreakRepeat = [table.settings.horizontalPageBreakRepeat];\n    }\n    // Code to repeat the given column in split pages\n    horizontalPageBreakRepeat.forEach(function (field) {\n        var col = table.columns.find(function (item) { return item.dataKey === field || item.index === field; });\n        if (col && !repeatColumnsMap.has(col.index)) {\n            repeatColumnsMap.set(col.index, true);\n            colIndexes.push(col.index);\n            columns.push(table.columns[col.index]);\n            remainingWidth -= col.wrappedWidth;\n        }\n    });\n    var first = true;\n    var i = (_a = config === null || config === void 0 ? void 0 : config.start) !== null && _a !== void 0 ? _a : 0; // make sure couter is initiated outside the loop\n    while (i < table.columns.length) {\n        // Prevent duplicates\n        if (repeatColumnsMap.has(i)) {\n            i++;\n            continue;\n        }\n        var colWidth = table.columns[i].wrappedWidth;\n        // Take at least one column even if it doesn't fit\n        if (first || remainingWidth >= colWidth) {\n            first = false;\n            colIndexes.push(i);\n            columns.push(table.columns[i]);\n            remainingWidth -= colWidth;\n        }\n        else {\n            break;\n        }\n        i++;\n    }\n    return { colIndexes: colIndexes, columns: columns, lastIndex: i - 1 };\n}\nfunction calculateAllColumnsCanFitInPage(doc, table) {\n    var allResults = [];\n    for (var i = 0; i < table.columns.length; i++) {\n        var result = getColumnsCanFitInPage(doc, table, { start: i });\n        if (result.columns.length) {\n            allResults.push(result);\n            i = result.lastIndex;\n        }\n    }\n    return allResults;\n}\n\nfunction drawTable(jsPDFDoc, table) {\n    var settings = table.settings;\n    var startY = settings.startY;\n    var margin = settings.margin;\n    var cursor = { x: margin.left, y: startY };\n    var sectionsHeight = table.getHeadHeight(table.columns) + table.getFootHeight(table.columns);\n    var minTableBottomPos = startY + margin.bottom + sectionsHeight;\n    if (settings.pageBreak === 'avoid') {\n        var rows = table.body;\n        var tableHeight = rows.reduce(function (acc, row) { return acc + row.height; }, 0);\n        minTableBottomPos += tableHeight;\n    }\n    var doc = new DocHandler(jsPDFDoc);\n    if (settings.pageBreak === 'always' ||\n        (settings.startY != null && minTableBottomPos > doc.pageSize().height)) {\n        nextPage(doc);\n        cursor.y = margin.top;\n    }\n    table.callWillDrawPageHooks(doc, cursor);\n    var startPos = assign({}, cursor);\n    table.startPageNumber = doc.pageNumber();\n    if (settings.horizontalPageBreak) {\n        // managed flow for split columns\n        printTableWithHorizontalPageBreak(doc, table, startPos, cursor);\n    }\n    else {\n        // normal flow\n        doc.applyStyles(doc.userStyles);\n        if (settings.showHead === 'firstPage' ||\n            settings.showHead === 'everyPage') {\n            table.head.forEach(function (row) {\n                return printRow(doc, table, row, cursor, table.columns);\n            });\n        }\n        doc.applyStyles(doc.userStyles);\n        table.body.forEach(function (row, index) {\n            var isLastRow = index === table.body.length - 1;\n            printFullRow(doc, table, row, isLastRow, startPos, cursor, table.columns);\n        });\n        doc.applyStyles(doc.userStyles);\n        if (settings.showFoot === 'lastPage' || settings.showFoot === 'everyPage') {\n            table.foot.forEach(function (row) {\n                return printRow(doc, table, row, cursor, table.columns);\n            });\n        }\n    }\n    addTableBorder(doc, table, startPos, cursor);\n    table.callEndPageHooks(doc, cursor);\n    table.finalY = cursor.y;\n    jsPDFDoc.lastAutoTable = table;\n    doc.applyStyles(doc.userStyles);\n}\nfunction printTableWithHorizontalPageBreak(doc, table, startPos, cursor) {\n    // calculate width of columns and render only those which can fit into page\n    var allColumnsCanFitResult = calculateAllColumnsCanFitInPage(doc, table);\n    var settings = table.settings;\n    if (settings.horizontalPageBreakBehaviour === 'afterAllRows') {\n        allColumnsCanFitResult.forEach(function (colsAndIndexes, index) {\n            doc.applyStyles(doc.userStyles);\n            // add page to print next columns in new page\n            if (index > 0) {\n                // When adding a page here, make sure not to print the footers\n                // because they were already printed before on this same loop\n                addPage(doc, table, startPos, cursor, colsAndIndexes.columns, true);\n            }\n            else {\n                // print head for selected columns\n                printHead(doc, table, cursor, colsAndIndexes.columns);\n            }\n            // print body & footer for selected columns\n            printBody(doc, table, startPos, cursor, colsAndIndexes.columns);\n            printFoot(doc, table, cursor, colsAndIndexes.columns);\n        });\n    }\n    else {\n        var lastRowIndexOfLastPage_1 = -1;\n        var firstColumnsToFitResult = allColumnsCanFitResult[0];\n        var _loop_1 = function () {\n            // Print the first columns, taking note of the last row printed\n            var lastPrintedRowIndex = lastRowIndexOfLastPage_1;\n            if (firstColumnsToFitResult) {\n                doc.applyStyles(doc.userStyles);\n                var firstColumnsToFit = firstColumnsToFitResult.columns;\n                if (lastRowIndexOfLastPage_1 >= 0) {\n                    // When adding a page here, make sure not to print the footers\n                    // because they were already printed before on this same loop\n                    addPage(doc, table, startPos, cursor, firstColumnsToFit, true);\n                }\n                else {\n                    printHead(doc, table, cursor, firstColumnsToFit);\n                }\n                lastPrintedRowIndex = printBodyWithoutPageBreaks(doc, table, lastRowIndexOfLastPage_1 + 1, cursor, firstColumnsToFit);\n                printFoot(doc, table, cursor, firstColumnsToFit);\n            }\n            // Check how many rows were printed, so that the next columns would not print more rows than that\n            var maxNumberOfRows = lastPrintedRowIndex - lastRowIndexOfLastPage_1;\n            // Print the next columns, never exceding maxNumberOfRows\n            allColumnsCanFitResult.slice(1).forEach(function (colsAndIndexes) {\n                doc.applyStyles(doc.userStyles);\n                // When adding a page here, make sure not to print the footers\n                // because they were already printed before on this same loop\n                addPage(doc, table, startPos, cursor, colsAndIndexes.columns, true);\n                printBodyWithoutPageBreaks(doc, table, lastRowIndexOfLastPage_1 + 1, cursor, colsAndIndexes.columns, maxNumberOfRows);\n                printFoot(doc, table, cursor, colsAndIndexes.columns);\n            });\n            lastRowIndexOfLastPage_1 = lastPrintedRowIndex;\n        };\n        while (lastRowIndexOfLastPage_1 < table.body.length - 1) {\n            _loop_1();\n        }\n    }\n}\nfunction printHead(doc, table, cursor, columns) {\n    var settings = table.settings;\n    doc.applyStyles(doc.userStyles);\n    if (settings.showHead === 'firstPage' || settings.showHead === 'everyPage') {\n        table.head.forEach(function (row) { return printRow(doc, table, row, cursor, columns); });\n    }\n}\nfunction printBody(doc, table, startPos, cursor, columns) {\n    doc.applyStyles(doc.userStyles);\n    table.body.forEach(function (row, index) {\n        var isLastRow = index === table.body.length - 1;\n        printFullRow(doc, table, row, isLastRow, startPos, cursor, columns);\n    });\n}\nfunction printBodyWithoutPageBreaks(doc, table, startRowIndex, cursor, columns, maxNumberOfRows) {\n    doc.applyStyles(doc.userStyles);\n    maxNumberOfRows = maxNumberOfRows !== null && maxNumberOfRows !== void 0 ? maxNumberOfRows : table.body.length;\n    var endRowIndex = Math.min(startRowIndex + maxNumberOfRows, table.body.length);\n    var lastPrintedRowIndex = -1;\n    table.body.slice(startRowIndex, endRowIndex).forEach(function (row, index) {\n        var isLastRow = startRowIndex + index === table.body.length - 1;\n        var remainingSpace = getRemainingPageSpace(doc, table, isLastRow, cursor);\n        if (row.canEntireRowFit(remainingSpace, columns)) {\n            printRow(doc, table, row, cursor, columns);\n            lastPrintedRowIndex = startRowIndex + index;\n        }\n    });\n    return lastPrintedRowIndex;\n}\nfunction printFoot(doc, table, cursor, columns) {\n    var settings = table.settings;\n    doc.applyStyles(doc.userStyles);\n    if (settings.showFoot === 'lastPage' || settings.showFoot === 'everyPage') {\n        table.foot.forEach(function (row) { return printRow(doc, table, row, cursor, columns); });\n    }\n}\nfunction getRemainingLineCount(cell, remainingPageSpace, doc) {\n    var lineHeight = doc.getLineHeight(cell.styles.fontSize);\n    var vPadding = cell.padding('vertical');\n    var remainingLines = Math.floor((remainingPageSpace - vPadding) / lineHeight);\n    return Math.max(0, remainingLines);\n}\nfunction modifyRowToFit(row, remainingPageSpace, table, doc) {\n    var cells = {};\n    row.spansMultiplePages = true;\n    row.height = 0;\n    var rowHeight = 0;\n    for (var _i = 0, _a = table.columns; _i < _a.length; _i++) {\n        var column = _a[_i];\n        var cell = row.cells[column.index];\n        if (!cell)\n            continue;\n        if (!Array.isArray(cell.text)) {\n            cell.text = [cell.text];\n        }\n        var remainderCell = new Cell(cell.raw, cell.styles, cell.section);\n        remainderCell = assign(remainderCell, cell);\n        remainderCell.text = [];\n        var remainingLineCount = getRemainingLineCount(cell, remainingPageSpace, doc);\n        if (cell.text.length > remainingLineCount) {\n            remainderCell.text = cell.text.splice(remainingLineCount, cell.text.length);\n        }\n        var scaleFactor = doc.scaleFactor();\n        var lineHeightFactor = doc.getLineHeightFactor();\n        cell.contentHeight = cell.getContentHeight(scaleFactor, lineHeightFactor);\n        if (cell.contentHeight >= remainingPageSpace) {\n            cell.contentHeight = remainingPageSpace;\n            remainderCell.styles.minCellHeight -= remainingPageSpace;\n        }\n        if (cell.contentHeight > row.height) {\n            row.height = cell.contentHeight;\n        }\n        remainderCell.contentHeight = remainderCell.getContentHeight(scaleFactor, lineHeightFactor);\n        if (remainderCell.contentHeight > rowHeight) {\n            rowHeight = remainderCell.contentHeight;\n        }\n        cells[column.index] = remainderCell;\n    }\n    var remainderRow = new Row(row.raw, -1, row.section, cells, true);\n    remainderRow.height = rowHeight;\n    for (var _b = 0, _c = table.columns; _b < _c.length; _b++) {\n        var column = _c[_b];\n        var remainderCell = remainderRow.cells[column.index];\n        if (remainderCell) {\n            remainderCell.height = remainderRow.height;\n        }\n        var cell = row.cells[column.index];\n        if (cell) {\n            cell.height = row.height;\n        }\n    }\n    return remainderRow;\n}\nfunction shouldPrintOnCurrentPage(doc, row, remainingPageSpace, table) {\n    var pageHeight = doc.pageSize().height;\n    var margin = table.settings.margin;\n    var marginHeight = margin.top + margin.bottom;\n    var maxRowHeight = pageHeight - marginHeight;\n    if (row.section === 'body') {\n        // Should also take into account that head and foot is not\n        // on every page with some settings\n        maxRowHeight -=\n            table.getHeadHeight(table.columns) + table.getFootHeight(table.columns);\n    }\n    var minRowHeight = row.getMinimumRowHeight(table.columns, doc);\n    var minRowFits = minRowHeight < remainingPageSpace;\n    if (minRowHeight > maxRowHeight) {\n        console.error(\"Will not be able to print row \".concat(row.index, \" correctly since it's minimum height is larger than page height\"));\n        return true;\n    }\n    if (!minRowFits) {\n        return false;\n    }\n    var rowHasRowSpanCell = row.hasRowSpan(table.columns);\n    var rowHigherThanPage = row.getMaxCellHeight(table.columns) > maxRowHeight;\n    if (rowHigherThanPage) {\n        if (rowHasRowSpanCell) {\n            console.error(\"The content of row \".concat(row.index, \" will not be drawn correctly since drawing rows with a height larger than the page height and has cells with rowspans is not supported.\"));\n        }\n        return true;\n    }\n    if (rowHasRowSpanCell) {\n        // Currently a new page is required whenever a rowspan row don't fit a page.\n        return false;\n    }\n    if (table.settings.rowPageBreak === 'avoid') {\n        return false;\n    }\n    // In all other cases print the row on current page\n    return true;\n}\nfunction printFullRow(doc, table, row, isLastRow, startPos, cursor, columns) {\n    var remainingSpace = getRemainingPageSpace(doc, table, isLastRow, cursor);\n    if (row.canEntireRowFit(remainingSpace, columns)) {\n        // The row fits in the current page\n        printRow(doc, table, row, cursor, columns);\n    }\n    else if (shouldPrintOnCurrentPage(doc, row, remainingSpace, table)) {\n        // The row gets split in two here, each piece in one page\n        var remainderRow = modifyRowToFit(row, remainingSpace, table, doc);\n        printRow(doc, table, row, cursor, columns);\n        addPage(doc, table, startPos, cursor, columns);\n        printFullRow(doc, table, remainderRow, isLastRow, startPos, cursor, columns);\n    }\n    else {\n        // The row get printed entirelly on the next page\n        addPage(doc, table, startPos, cursor, columns);\n        printFullRow(doc, table, row, isLastRow, startPos, cursor, columns);\n    }\n}\nfunction printRow(doc, table, row, cursor, columns) {\n    cursor.x = table.settings.margin.left;\n    for (var _i = 0, columns_1 = columns; _i < columns_1.length; _i++) {\n        var column = columns_1[_i];\n        var cell = row.cells[column.index];\n        if (!cell) {\n            cursor.x += column.width;\n            continue;\n        }\n        doc.applyStyles(cell.styles);\n        cell.x = cursor.x;\n        cell.y = cursor.y;\n        var result = table.callCellHooks(doc, table.hooks.willDrawCell, cell, row, column, cursor);\n        if (result === false) {\n            cursor.x += column.width;\n            continue;\n        }\n        drawCellRect(doc, cell, cursor);\n        var textPos = cell.getTextPos();\n        autoTableText(cell.text, textPos.x, textPos.y, {\n            halign: cell.styles.halign,\n            valign: cell.styles.valign,\n            maxWidth: Math.ceil(cell.width - cell.padding('left') - cell.padding('right')),\n        }, doc.getDocument());\n        table.callCellHooks(doc, table.hooks.didDrawCell, cell, row, column, cursor);\n        cursor.x += column.width;\n    }\n    cursor.y += row.height;\n}\nfunction drawCellRect(doc, cell, cursor) {\n    var cellStyles = cell.styles;\n    // https://github.com/simonbengtsson/jsPDF-AutoTable/issues/774\n    // TODO (v4): better solution?\n    doc.getDocument().setFillColor(doc.getDocument().getFillColor());\n    if (typeof cellStyles.lineWidth === 'number') {\n        // Draw cell background with normal borders\n        var fillStyle = getFillStyle(cellStyles.lineWidth, cellStyles.fillColor);\n        if (fillStyle) {\n            doc.rect(cell.x, cursor.y, cell.width, cell.height, fillStyle);\n        }\n    }\n    else if (typeof cellStyles.lineWidth === 'object') {\n        // Draw cell background\n        if (cellStyles.fillColor) {\n            doc.rect(cell.x, cursor.y, cell.width, cell.height, 'F');\n        }\n        // Draw cell individual borders\n        drawCellBorders(doc, cell, cursor, cellStyles.lineWidth);\n    }\n}\n/**\n * Draw all specified borders. Borders are centered on cell's edge and lengthened\n * to overlap with neighbours to create sharp corners.\n * @param doc\n * @param cell\n * @param cursor\n * @param fillColor\n * @param lineWidth\n */\nfunction drawCellBorders(doc, cell, cursor, lineWidth) {\n    var x1, y1, x2, y2;\n    if (lineWidth.top) {\n        x1 = cursor.x;\n        y1 = cursor.y;\n        x2 = cursor.x + cell.width;\n        y2 = cursor.y;\n        if (lineWidth.right) {\n            x2 += 0.5 * lineWidth.right;\n        }\n        if (lineWidth.left) {\n            x1 -= 0.5 * lineWidth.left;\n        }\n        drawLine(lineWidth.top, x1, y1, x2, y2);\n    }\n    if (lineWidth.bottom) {\n        x1 = cursor.x;\n        y1 = cursor.y + cell.height;\n        x2 = cursor.x + cell.width;\n        y2 = cursor.y + cell.height;\n        if (lineWidth.right) {\n            x2 += 0.5 * lineWidth.right;\n        }\n        if (lineWidth.left) {\n            x1 -= 0.5 * lineWidth.left;\n        }\n        drawLine(lineWidth.bottom, x1, y1, x2, y2);\n    }\n    if (lineWidth.left) {\n        x1 = cursor.x;\n        y1 = cursor.y;\n        x2 = cursor.x;\n        y2 = cursor.y + cell.height;\n        if (lineWidth.top) {\n            y1 -= 0.5 * lineWidth.top;\n        }\n        if (lineWidth.bottom) {\n            y2 += 0.5 * lineWidth.bottom;\n        }\n        drawLine(lineWidth.left, x1, y1, x2, y2);\n    }\n    if (lineWidth.right) {\n        x1 = cursor.x + cell.width;\n        y1 = cursor.y;\n        x2 = cursor.x + cell.width;\n        y2 = cursor.y + cell.height;\n        if (lineWidth.top) {\n            y1 -= 0.5 * lineWidth.top;\n        }\n        if (lineWidth.bottom) {\n            y2 += 0.5 * lineWidth.bottom;\n        }\n        drawLine(lineWidth.right, x1, y1, x2, y2);\n    }\n    function drawLine(width, x1, y1, x2, y2) {\n        doc.getDocument().setLineWidth(width);\n        doc.getDocument().line(x1, y1, x2, y2, 'S');\n    }\n}\nfunction getRemainingPageSpace(doc, table, isLastRow, cursor) {\n    var bottomContentHeight = table.settings.margin.bottom;\n    var showFoot = table.settings.showFoot;\n    if (showFoot === 'everyPage' || (showFoot === 'lastPage' && isLastRow)) {\n        bottomContentHeight += table.getFootHeight(table.columns);\n    }\n    return doc.pageSize().height - cursor.y - bottomContentHeight;\n}\nfunction addPage(doc, table, startPos, cursor, columns, suppressFooter) {\n    if (columns === void 0) { columns = []; }\n    if (suppressFooter === void 0) { suppressFooter = false; }\n    doc.applyStyles(doc.userStyles);\n    if (table.settings.showFoot === 'everyPage' && !suppressFooter) {\n        table.foot.forEach(function (row) { return printRow(doc, table, row, cursor, columns); });\n    }\n    // Add user content just before adding new page ensure it will\n    // be drawn above other things on the page\n    table.callEndPageHooks(doc, cursor);\n    var margin = table.settings.margin;\n    addTableBorder(doc, table, startPos, cursor);\n    nextPage(doc);\n    table.pageNumber++;\n    cursor.x = margin.left;\n    cursor.y = margin.top;\n    startPos.y = margin.top;\n    // call didAddPage hooks before any content is added to the page\n    table.callWillDrawPageHooks(doc, cursor);\n    if (table.settings.showHead === 'everyPage') {\n        table.head.forEach(function (row) { return printRow(doc, table, row, cursor, columns); });\n        doc.applyStyles(doc.userStyles);\n    }\n}\nfunction nextPage(doc) {\n    var current = doc.pageNumber();\n    doc.setPage(current + 1);\n    var newCurrent = doc.pageNumber();\n    if (newCurrent === current) {\n        doc.addPage();\n        return true;\n    }\n    return false;\n}\n\nfunction applyPlugin(jsPDF) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    jsPDF.API.autoTable = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        var options = args[0];\n        var input = parseInput(this, options);\n        var table = createTable(this, input);\n        drawTable(this, table);\n        return this;\n    };\n    // Assign false to enable `doc.lastAutoTable.finalY || 40` sugar\n    jsPDF.API.lastAutoTable = false;\n    jsPDF.API.autoTableText = function (text, x, y, styles) {\n        autoTableText(text, x, y, styles, this);\n    };\n    jsPDF.API.autoTableSetDefaults = function (defaults) {\n        DocHandler.setDefaults(defaults, this);\n        return this;\n    };\n    jsPDF.autoTableSetDefaults = function (defaults, doc) {\n        DocHandler.setDefaults(defaults, doc);\n    };\n    jsPDF.API.autoTableHtmlToJson = function (tableElem, includeHiddenElements) {\n        var _a;\n        if (includeHiddenElements === void 0) { includeHiddenElements = false; }\n        if (typeof window === 'undefined') {\n            console.error('Cannot run autoTableHtmlToJson in non browser environment');\n            return null;\n        }\n        var doc = new DocHandler(this);\n        var _b = parseHtml(doc, tableElem, window, includeHiddenElements, false), head = _b.head, body = _b.body;\n        var columns = ((_a = head[0]) === null || _a === void 0 ? void 0 : _a.map(function (c) { return c.content; })) || [];\n        return { columns: columns, rows: body, data: body };\n    };\n}\n\nvar _a;\nfunction autoTable(d, options) {\n    var input = parseInput(d, options);\n    var table = createTable(d, input);\n    drawTable(d, table);\n}\n// Experimental export\nfunction __createTable(d, options) {\n    var input = parseInput(d, options);\n    return createTable(d, input);\n}\nfunction __drawTable(d, table) {\n    drawTable(d, table);\n}\ntry {\n    if (typeof window !== 'undefined' && window) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        var anyWindow = window;\n        var jsPDF = anyWindow.jsPDF || ((_a = anyWindow.jspdf) === null || _a === void 0 ? void 0 : _a.jsPDF);\n        if (jsPDF) {\n            applyPlugin(jsPDF);\n        }\n    }\n}\ncatch (error) {\n    console.error('Could not apply autoTable plugin', error);\n}\n\nexport { Cell, CellHookData, Column, HookData, Row, Table, __createTable, __drawTable, applyPlugin, autoTable, autoTable as default };\n"],"names":["autoTableText","text","x","y","styles","doc","k","internal","scaleFactor","fontSize","getFontSize","lineHeight","getLineHeightFactor","splitText","lineCount","valign","halign","split","length","alignSize","iLine","getStringUnitWidth","maxWidth","align","globalDefaults","DocHandler","jsPDFDocument","this","userStyles","textColor","getTextColor","fontStyle","getFont","font","fontName","lineWidth","getLineWidth","lineColor","getDrawColor","setDefaults","defaults","__autoTableDocumentDefaults","unifyColor","c","Array","isArray","prototype","applyStyles","fontOnly","_a","_b","_c","setFontStyle","_d","availableFontStyles","getFontList","indexOf","setFont","setFontSize","color","fillColor","setFillColor","apply","setTextColor","setDrawColor","setLineWidth","splitTextToSize","size","opts","rect","width","height","fillStyle","getLastAutoTable","lastAutoTable","getTextWidth","getDocument","setPage","page","addPage","getGlobalOptions","getDocumentOptions","pageSize","getWidth","getHeight","getLineHeight","pageNumber","pageInfo","getCurrentPageInfo","getNumberOfPages","extendStatics","d","b","Object","setPrototypeOf","__proto__","p","hasOwnProperty","call","__extends","TypeError","String","__","constructor","create","SuppressedError","HtmlRowInput","_super","element","_this","_element","getStringWidth","map","reduce","a","Math","max","addTableBorder","table","startPos","cursor","settings","tableLineWidth","tableLineColor","getFillStyle","drawLine","drawBackground","parseSpacing","value","defaultValue","top","right","bottom","left","vertical","horizontal","getPageAvailableWidth","margins","margin","parseCss","supportedFonts","style","window","result","pxScaleFactor","backgroundColor","parseColor","elem","getComputedStyle","padding","val","paddingTop","paddingRight","paddingBottom","paddingLeft","linePadding","parseInt","inputPadding","n","parsePadding","cellPadding","borderColorSide","finalScaleFactor","btw","borderTopWidth","borderBottomWidth","borderRightWidth","borderLeftWidth","borderWidth","parseFloat","borderColor","accepted","textAlign","verticalAlign","res","isNaN","fontWeight","parseFontStyle","fontFamily","toLowerCase","styleGetter","cssColor","realColor","rgba","match","bg","parentElement","parseHtml","input","includeHiddenHtml","useCss","tableElement","document","querySelector","keys","head","body","foot","console","error","i","rows","tagName","row","parseRowContent","push","includeHidden","resultRow","cells","cell","style_1","display","cellStyles","rowSpan","colSpan","content","parseCellContent","orgCell","cloneNode","innerHTML","replace","part","trim","join","innerText","textContent","assign","target","s","s1","s2","s3","to","index","arguments","nextSource","nextKey","parseInput","current","global","_i","options","startY","validateInput","win","gInput","dInput","cInput","styleOptions","headStyles","bodyStyles","footStyles","alternateRowStyles","columnStyles","_loop_1","prop","global_1","document_1","parseStyles","hooks","didParseCell","willDrawCell","didDrawCell","willDrawPage","didDrawPage","allOptions_1","parseHooks","_e","_f","_g","_h","_j","_k","_l","_m","showFoot","showHead","userStartY","previous","sf","currentPage","isSamePageAsPreviousTable","startPageNumber","finalY","getStartY","theme","horizontalPageBreak","horizontalPageBreakRepeat","pageBreak","rowPageBreak","tableWidth","horizontalPageBreakBehaviour","parseSettings","html","hidden","htmlContent","columns","firstRow","filter","key","forEach","rowResult","dataKey","concat","parseColumns","parseContent$1","id","tableId","HookData","CellHookData","column","section","Table","getHeadHeight","acc","getMaxCellHeight","getFootHeight","allRows","callCellHooks","handlers","handlers_1","handler","callEndPageHooks","callWillDrawPageHooks","pageWidth","total","col","wrappedWidth","Row","raw","spansMultiplePages","hasRowSpan","canEntireRowFit","getMinimumRowHeight","oneRowHeight","Cell","contentHeight","contentWidth","minReadableWidth","minWidth","getTextPos","netHeight","netWidth","getContentHeight","lineHeightFactor","minCellHeight","name","Column","getMaxCustomCellWidth","cellWidth","calculateWidths","availablePageWidth","longestWordWidth","defaultMinWidth","minCellWidth","calculate","resizableColumns","initialTableWidth","customWidth","resizeWidth","resizeColumns","abs","round","warn","all","rowIndex","colSpanCell","combinedColSpanWidth","colSpansLeft","columnIndex","applyColSpans","rowSpanHeight","count","textSpace","overflow","ellipsize","realContentHeight","fitContent","rowSpanCells","colRowSpansLeft","data","remaining","applyRowSpans","getMinWidth","initialResizeWidth","sumWrappedWidth","suggestedChange","suggestedWidth","newWidth","str","precision","ceil","substring","ellipsizeStr","createTable","jsPDFDoc","createColumns","sectionRow","generateSectionRow","parseSection","parseContent","sectionName","sectionRows","styleProps","rowSpansLeftForColumn","rawRow","skippedRowForRowSpans","colSpansAdded","columnSpansLeft","columns_1","rawCell","cellInputStyles","times","title","header","footer","getSectionTitle","themeName","sectionStyles","striped","alternateRow","grid","plain","otherStyles","colStyles","rowStyles","defaultStyle","defaultStyles","themeStyles","getColumnsCanFitInPage","config","remainingWidth","repeatColumnsMap","Map","colIndexes","field","find","item","has","set","first","start","colWidth","lastIndex","drawTable","sectionsHeight","minTableBottomPos","nextPage","allColumnsCanFitResult","allResults","calculateAllColumnsCanFitInPage","colsAndIndexes","printHead","isLastRow","printFullRow","printBody","printFoot","lastRowIndexOfLastPage_1","firstColumnsToFitResult","lastPrintedRowIndex","firstColumnsToFit","printBodyWithoutPageBreaks","maxNumberOfRows","slice","printTableWithHorizontalPageBreak","printRow","startRowIndex","endRowIndex","min","remainingSpace","getRemainingPageSpace","getRemainingLineCount","remainingPageSpace","vPadding","remainingLines","floor","pageHeight","maxRowHeight","minRowHeight","minRowFits","rowHasRowSpanCell","shouldPrintOnCurrentPage","remainderRow","rowHeight","remainderCell","remainingLineCount","splice","modifyRowToFit","drawCellRect","textPos","getFillColor","x1","y1","x2","y2","line","drawCellBorders","bottomContentHeight","suppressFooter","applyPlugin","jsPDF","API","autoTable","args","autoTableSetDefaults","autoTableHtmlToJson","tableElem","includeHiddenElements","__createTable","__drawTable","anyWindow","jspdf"],"sourceRoot":""}